name: Merge to Main

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  codeql:
    name: Semantic Code Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Set Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: frontend/yarn.lock

      - name: Install dependencies
        run: yarn --prefer-offline --cwd frontend

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # Generate release notes and update new version
  release:
    name: Release Notes
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.changelog.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Set Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: frontend/yarn.lock

      - name: Conventional Changelog Update
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          output-file: "CHANGELOG.md"
          skip-version-file: "true"
          skip-commit: "true"
          skip-on-empty: "false"
          git-push: "false"

      - name: Set new version output
        run: |
          echo "::set-output name=version::${{ steps.changelog.outputs.version }}"
          cd frontend && npm version ${{ steps.changelog.outputs.version }} --git-tag-version false
      - name: Commit package and changelog
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Ci Bot
          author_email: cibot@users.noreply.github.com
          message: "doc: updating package to ${{ steps.changelog.outputs.version }} [ci skip]"
          add: '["frontend/package.json","frontend/CHANGELOG.md"]'

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

  deploy-test:
    name: TEST Deployment
    needs:
      - codeql
      - release
    environment: test
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [init, frontend]
        include:
          - name: init
            file: common/openshift.init.yml
            overwrite: false
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters: -p MIN_REPLICAS=1 -p MAX_REPLICAS=2 -p BUILD=test-${{ needs.release.outputs.version }}
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          verification_path: "actuator/health"
          parameters: -p ZONE=test -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:test
            ${{ matrix.parameters }}

  e2e-smoke:
    name: E2E Smoke on Chrome
    needs:
      - zap-app
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: frontend
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          browser: chrome

      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

  deploy-prod:
    name: PROD Deployment
    needs:
      - api-tests
    environment: prod
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [init, frontend]
        include:
          - name: init
            file: common/openshift.init.yml
            overwrite: false
          - name: frontend
            file: frontend/openshift.deploy.yml
            overwrite: true
            parameters: -p BUILD=prod-${{ needs.release.outputs.version }}
    steps:
      - uses: bcgov-nr/action-deployer-openshift@v1.0.1
        with:
          file: ${{ matrix.file }}
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: ${{ matrix.overwrite }}
          penetration_test: false
          verification_path: "actuator/health"
          parameters: -p ZONE=prod -p NAME=${{ github.event.repository.name }}
            -p PROMOTE=${{ github.repository }}/${{ matrix.name }}:test
            ${{ matrix.parameters }}

  image-promotions:
    name: Promote Images to PROD
    needs:
      - deploy-prod
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        component: [frontend]
    steps:
      - uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.component }}
          target: test
          tags: prod
